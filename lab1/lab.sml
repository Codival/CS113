datatype Bool = F | T;
fun AND (F,x) = F | AND (T,x) = x;
val truthValues = [(F,F),(F,T),(T,F),(T,T)];
map AND truthValues;
datatype Bool = F | T;
fun OR (T,x) = T | OR (F,x) = x;
val truthValues = [(F,F),(F,T),(T,F),(T,T)];
map OR truthValues;
datatype Bool = F | T;
fun NOT (F) = T | NOT (T) = F;
fun XOR (x) = NOT x;
val truthValues = [(F),(T)];
map XOR truthValues;
datatype Bool = F | T;
fun NOT (F) = T | NOT (T) = F;
fun XOR (F,x) = x | XOR (T,x) = NOT x;
val truthValues = [(F,F),(F,T),(T,F),(T,T)];
map XOR truthValues;
fun NOT(T) = F | NOT(F) = T;
val p = T;
val q = F;
XOR(p,q) = AND(OR(p,q),NOT(AND(p,q)));
datatype Bool = F | T;
fun NOT (F) = T | NOT (T) = F;
fun XOR (F,x) = x | XOR (T,x) = NOT x;
val truthValues = [(F,F),(F,T),(T,F),(T,T)];
map XOR truthValues;
